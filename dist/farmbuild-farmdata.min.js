"use strict";angular.module("farmbuild.farmdata",[]),window.farmbuild={farmdata:{}},angular.module("farmbuild.farmdata").factory("farmData",function(farmDataSession){var farmData={session:farmDataSession},defaults={name:"My new farm",geometry:{type:"Polygon",crs:"EPSG:4283",coordinates:[]}},create=function(name){return{version:1,dateCreated:new Date,dateLastUpdated:new Date,name:name?name:defaults.name,geometry:angular.copy(defaults.geometry),area:0}};return farmData.defaultValues=function(){return angular.copy(defaults)},farmData.isLoadFlagSet=function(location){var load=!1;return location.href.split("?").length>1&&0===location.href.split("?")[1].indexOf("load")&&(load="true"===location.href.split("?")[1].split("=")[1]),load},farmData.isFarmData=function(farmData){return angular.isDefined(farmData)&&angular.isObject(farmData)&&farmData.hasOwnProperty("name")?!0:!1},farmData.create=function(name){return create(name)},window.farmbuild.farmdata=farmData,farmData}),angular.module("farmbuild.farmdata").factory("farmDataSession",function($log,validations){var farmDataSession={},isDefined=validations.isDefined;return farmDataSession.save=function(farmData){return $log.info("saving farmData"),isDefined(farmData)?(sessionStorage.setItem("farmData",angular.toJson(farmData)),farmDataSession):($log.error("Unable to save farmData... it is undefined"),farmDataSession)},farmDataSession.find=function(){return angular.fromJson(sessionStorage.getItem("farmData"))},farmDataSession}),function(window){console.log("Welcome to karmas, karma spec helper"),window||(console.log("window is not available..."),window={}),window.karmas={};var karmas=window.karmas;karmas.logToConsole=function(moduleName){return beforeEach(module(moduleName,function($provide){$provide.value("$log",console)})),karmas}}(window),angular.module("farmbuild.farmdata").factory("validations",function($log){var validations={};validations.isPositiveNumberOrZero=function(value){return!isNaN(parseFloat(value))&&isFinite(value)&&parseFloat(value)>=0},validations.isPositiveNumber=function(value){return validations.isPositiveNumberOrZero(value)&&parseFloat(value)>0},validations.isAlphabet=function(value){var regex=/^[A-Za-z]+$/gi;return regex.test(value)},validations.isAlphanumeric=function(value){var regex=/^[a-zA-Z0-9]*[a-zA-Z]+[a-zA-Z0-9 _]*$/gi;return regex.test(value)};var isEmpty=function(data){return"number"==typeof data||"boolean"==typeof data?!1:"undefined"==typeof data||null===data?!0:"undefined"!=typeof data.length?0==data.length:!1};return validations.isEmpty=isEmpty,validations.isDefined=angular.isDefined,validations.isArray=angular.isArray,validations.equals=angular.equals,validations});